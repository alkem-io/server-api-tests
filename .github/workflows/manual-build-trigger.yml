name: Manual Clean Up Environment and Trigger Tests

on:
  workflow_dispatch:

jobs:
  cleanup-db:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4.1.7

      - name: Install Kubectl
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'v1.27.6' # Ensure this matches the version used in your cluster

      - name: Set up Kubeconfig for Hetzner k3s
        run: |
          mkdir -p $HOME/.kube  # Ensure the .kube directory exists
          echo "${{ secrets.KUBECONFIG_SECRET_HETZNER_TEST }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Port-forward to DB service and reset database
        run: |
          # Port-forward to the DB service in the background
          kubectl port-forward svc/DB 3306:3306 &
          PORT_FORWARD_PID=$!
          sleep 5  # Give port-forwarding some time to start

          # Drop and recreate the database
          mysql -h 127.0.0.1 -P 3306 -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD_TEST }}" -e "DROP DATABASE IF EXISTS alkemio; CREATE DATABASE alkemio;"

          # Kill the port-forward process
          kill $PORT_FORWARD_PID

      - name: Create and run migration job
        run: |
          # Define a unique job name based on the GitHub run ID
          MIGRATION_JOB_NAME="alkemio-server-migration-job-${{ github.run_id }}"

          # Create the job from the cronjob
          kubectl create job --from=cronjob/alkemio-server-migration $MIGRATION_JOB_NAME

          # Wait for the migration job to complete
          kubectl wait --for=condition=complete job/$MIGRATION_JOB_NAME --timeout=600s

          # Check job status and fail the step if the job didn't succeed
          MIGRATION_JOB_STATUS=$(kubectl get job $MIGRATION_JOB_NAME -o jsonpath='{.status.succeeded}')
          if [ "$MIGRATION_JOB_STATUS" != "1" ]; then
            echo "Migration job failed!"
            exit 1
          fi

          echo "Migration job completed successfully."

  trigger-e2e-tests-travis-ci:
    needs: cleanup-db
    runs-on: ubuntu-latest
    steps:
      - name: Run e2e Tests
        uses: cmdbg/travis-ci-action@main
        env:
          TRAVIS_TOKEN: ${{ secrets.TRAVIS_TOKEN }}
          TARGET_REPOSITORY: alkem-io/test-suites
          TARGET_BRANCH: develop